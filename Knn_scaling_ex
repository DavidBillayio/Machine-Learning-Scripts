from sklearn.preprocessing import StandardScaler

steps = [('scaler', StandardScaler()), ('knn', KNeighborsClassifier())]

pipeline = Pipeline(steps)

#~~Scaled

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 42)

knn_scaled = pipeline.fit(X_train, y_train)

y_pred = pipeline.predict(X_test)

print(accuracy_score(y_test, y_pred))

#~~Unscaled

knn_unscaled = KNeighborsClassifier().fit(X_train, y_train)

print(knn_unscaled.score(X_test, y_test))

#~~GridSearch implementation

parameters = {knn__n_neighbors = np.arange(1,5)}

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 42)

cv= GridSearchCV(pipeline, param_grid = parameters)

cv.fit(X_train, y_train)

y_pred = cv.predict(X_test)

print(cv.best_params_)
print(cv.score(X_test, y_test)
print(classification_report(y_test,y_pred)

